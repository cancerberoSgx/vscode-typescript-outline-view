{
	"name": "vscode-typescript-ast-outline",
	"description": "vscode extension that adds a view in explorer panel that shows the Abstract Syntax Tree of active editor (TypeScript or JavaScript). Live updates and bindings from source code to the AST view. User can manipulate the ast nodes visually (removing, creating, moving, applying refactors, renaming, etc). Supports filtering and different AST view modes",
	"version": "0.0.2",
	"scripts": {
		"vscode:prepublish": "tsc -p ./",
		"watch": "tsc --watch",
		"build": "tsc",
		"postinstall": "node ./node_modules/vscode/bin/install"
	},
	"main": "./out/src/extension",
	"repository": "https://cancerberosgx.visualstudio.com/typescript-ast-outline",

	"devDependencies": {
		"typescript": "^2.9.1",
		"vscode": "^1.1.18",
		"tslint": "^5.10.0",
		"@types/node": "^10.0.4",
		"@types/mocha": "^5.2.0"
	},
	"dependencies": {
		"ts-simple-ast": "^12.2.0"
	},


	"keywords": [
		"typescript", "javascript", "AST", "outline"
	],


	"publisher": "cancerberosgx",
	"engines": {
		"vscode": "^1.23.0"
	},
	"displayName": "TypeScript AST Outline",
	
	"categories": [
		"Other", "Programming Languages"
	],

	
	"activationEvents": [
		"onView:jsonOutline",
		"onLanguage:typescript",
		"onLanguage:javascript"
	],

	"contributes": {
		"views": {
			"explorer": [
				{
					"id": "jsonOutline",
					"name": "TS Outline",
					"when": "jsonOutlineEnabled"
				}
			]
		},
		"commands": [
			{
				"command": "jsonOutline.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "jsonOutline.changeMode",
				"title": "Change Mode",
				"icon": {
					"light": "resources/light/dependency.svg",
					"dark": "resources/dark/dependency.svg"
				}
			},
			{
				"command": "jsonOutline.refreshNode",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},

			{
				"command": "jsonOutline.renameNode",
				"title": "Rename"
			},
			{
				"command": "jsonOutline.removeNode",
				"title": "Remove"
			},
			{
				"command": "jsonOutline.addChild",
				"title": "Add Child"
			},
			{
				"command": "jsonOutline.refactorNode",
				"title": "Refactor"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "jsonOutline.refresh",
					"when": "view == jsonOutline",
					"group": "navigation"
				},
				{
					"command": "jsonOutline.changeMode",
					"when": "view == jsonOutline",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "jsonOutline.renameNode",
					"when": "view == jsonOutline"
				},
				{
					"command": "jsonOutline.refactorNode",
					"when": "view == jsonOutline"
				},
				{
					"command": "jsonOutline.refreshNode",
					"when": "view == jsonOutline",
					"group": "inline"
				},
				{
					"command": "jsonOutline.removeNode",
					"when": "view == jsonOutline"
				},
				{
					"command": "jsonOutline.addChild",
					"when": "view == jsonOutline"
				}

			]
		},
		"configuration": [
			{
				"title": "TS Outline",
				"properties": {
					"jsonOutline.autorefresh": {
						"type": "boolean",
						"default": false
					}
				}
			}
		]
	}
}
